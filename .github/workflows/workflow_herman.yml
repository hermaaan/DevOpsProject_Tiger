name: Test-OPWM-APP

on:
  workflow_dispatch:
    inputs:
      runTest:
        required: true
        type: boolean
        default: false
      logErrors:
        required: true
        type: boolean
        default: false

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  API_KEY: ${{ secrets.API_KEY }}

jobs:
  TEST_OPWM:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        id: run_tests
        run: pytest tests/ > pytest-results.log
        continue-on-error: true

      - name: Upload error logs if tests failed and logging is enabled
        if: ${{ steps.run_tests.outcome == 'failure' && github.event.inputs.logErrors == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: error-log
          path: pytest-results.log

      - name: Fail job if tests failed
        if: ${{ steps.run_tests.outcome == 'failure' }}
        run: exit 1


  build_and_publish_docker:
    runs-on: ubuntu-latest
    needs: TEST_OPWM
    # Run only if all tests pass
    if: ${{ needs.test_openweathermap_ubuntu.outputs.unittest_failed == 'false' && needs.test_openweathermap_ubuntu.outputs.integration_failed == 'false' }}

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/opwm-api:latest .

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/opwm-api:latest
